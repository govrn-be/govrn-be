---
interface Version {
  id: string;
  author: {
    name: string;
    initials: string;
  };
  timestamp: string;
  changes: string[];
}

interface Props {
  versions: Version[];
  currentVersion: string;
}

const { versions, currentVersion } = Astro.props;
---

<div class="bg-white rounded-xl shadow-lg border border-gray-100 overflow-hidden">
  <div class="p-4 bg-gray-50 border-b border-gray-100">
    <h3 class="font-semibold text-gray-900">Version History</h3>
  </div>
  
  <div class="divide-y divide-gray-100">
    {versions.map(version => (
      <div class={`p-4 hover:bg-gray-50 transition-colors ${version.id === currentVersion ? 'bg-primary/5' : ''}`}>
        <div class="flex items-center justify-between mb-2">
          <div class="flex items-center space-x-3">
            <div class="w-8 h-8 rounded-full bg-primary/10 flex items-center justify-center text-primary">
              {version.author.initials}
            </div>
            <div>
              <p class="text-sm font-medium text-gray-900">{version.author.name}</p>
              <p class="text-xs text-gray-500">{version.timestamp}</p>
            </div>
          </div>
          <button class="text-sm text-primary hover:text-primary/90 font-medium">
            Restore
          </button>
        </div>
        <ul class="space-y-1 ml-11">
          {version.changes.map(change => (
            <li class="text-sm text-gray-600">â€¢ {change}</li>
          ))}
        </ul>
      </div>
    ))}
  </div>
</div>