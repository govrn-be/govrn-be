---
interface Template {
  name: string;
  icon: string;
  items: Array<{
    title: string;
    type: string;
    duration: number;
  }>;
}

interface Props {
  templates: Template[];
}

const { templates } = Astro.props;
---

<section class="py-24 bg-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center max-w-3xl mx-auto mb-16">
      <h2 class="text-3xl font-bold text-gray-900 mb-4">
        Start Fast with Smart Templates
      </h2>
      <p class="text-xl text-gray-600">
        Industry-specific templates that adapt to your board's needs
      </p>
    </div>

    <div class="grid md:grid-cols-2 gap-8">
      {templates.map(template => (
        <div class="bg-gradient-to-br from-primary/5 to-blue-500/5 rounded-xl p-8 border border-primary/10">
          <div class="flex items-center space-x-4 mb-6">
            <div class="text-3xl">{template.icon}</div>
            <h3 class="text-xl font-bold text-gray-900">{template.name}</h3>
          </div>
          <div class="space-y-4">
            {template.items.map(item => (
              <div class="bg-white rounded-lg p-4 flex items-center justify-between">
                <div class="flex items-center space-x-3">
                  <span class="px-3 py-1 text-sm font-medium rounded-full bg-primary/10 text-primary">
                    {item.type}
                  </span>
                  <span class="text-gray-900">{item.title}</span>
                </div>
                <span class="text-gray-500">{item.duration} min</span>
              </div>
            ))}
          </div>
        </div>
      ))}
    </div>
  </div>
</section>