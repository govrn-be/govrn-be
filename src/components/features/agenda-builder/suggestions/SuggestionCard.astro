---
interface Props {
  title: string;
  type: string;
  confidence: number;
  reason: string;
}

const { title, type, confidence, reason } = Astro.props;
---

<div class="group relative bg-gradient-to-br from-primary/5 to-transparent rounded-lg p-6 animate-pulse-fade">
  <div class="flex items-start justify-between">
    <div class="flex-grow">
      <h4 class="text-lg font-medium text-gray-900 mb-2">{title}</h4>
      <div class="flex items-center space-x-3 mb-4">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary">
          {type}
        </span>
        <span class="text-sm text-gray-500">
          {confidence}% confidence
        </span>
      </div>
      <p class="text-sm text-gray-600">
        <span class="font-medium">Why?</span> {reason}
      </p>
    </div>
    <button class="flex-shrink-0 p-2 text-primary opacity-0 group-hover:opacity-100 transition-opacity">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
      </svg>
    </button>
  </div>

  <!-- Confidence Bar -->
  <div class="absolute bottom-0 left-0 right-0 h-1 bg-gray-100 rounded-b-lg overflow-hidden">
    <div 
      class="h-full bg-gradient-to-r from-primary to-blue-600 animate-fill"
      style={`width: ${confidence}%`}
    ></div>
  </div>
</div>

<style>
  @keyframes pulseFade {
    0% { opacity: 0.7; }
    50% { opacity: 1; }
    100% { opacity: 0.7; }
  }

  @keyframes fill {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
  }

  .animate-pulse-fade {
    animation: pulseFade 2s ease-in-out infinite;
  }

  .animate-fill {
    animation: fill 1s ease-out forwards;
  }
</style>