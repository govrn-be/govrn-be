---
interface Props {
  name: string;
  description: string;
  price: string;
  period?: string;
  features: string[];
  popular?: boolean;
  ctaText?: string;
  ctaLink?: string;
}

const { 
  name, 
  description, 
  price, 
  period = "/month", 
  features, 
  popular = false,
  ctaText = "Contact Sales",
  ctaLink = "/request-demo"
} = Astro.props;
---

<div class={`relative bg-white rounded-2xl shadow-lg overflow-hidden transform hover:-translate-y-1 transition-all duration-300 ${popular ? 'ring-2 ring-primary' : 'ring-1 ring-gray-200'}`}>
  {popular && (
    <div class="absolute top-0 right-0 bg-primary text-white px-4 py-1 text-sm font-medium rounded-bl-lg">
      Most Popular
    </div>
  )}
  <div class="p-8">
    <h3 class="text-2xl font-bold text-gray-900">{name}</h3>
    <p class="mt-2 text-gray-500">{description}</p>
    <div class="mt-6 flex items-baseline">
      <span class="text-4xl font-bold text-gray-900">{price}</span>
      {price !== "Custom" && <span class="text-gray-500 ml-1">{period}</span>}
    </div>
    <div class="mt-6">
      <a
        href={ctaLink}
        class={`block w-full text-center px-6 py-4 text-lg font-medium rounded-xl transition-colors duration-200 ${
          popular
            ? 'text-white bg-primary hover:bg-primary/90'
            : 'text-primary bg-white border-2 border-primary/20 hover:bg-primary/5'
        }`}
      >
        {ctaText}
      </a>
    </div>
    <ul class="mt-8 space-y-4">
      {features.map(feature => (
        <li class="flex items-center">
          <svg class="h-5 w-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
          </svg>
          <span class="ml-3 text-gray-600">{feature}</span>
        </li>
      ))}
    </ul>
  </div>
</div>