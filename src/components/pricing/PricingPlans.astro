---
interface Props {
  plans: any[];
  texts?: {
    requestQuote: string;
    billedAnnually: string;
    mostPopular: string;
    month: string;
  };
}

const { 
  plans,
  texts = {
    requestQuote: "Request a Quote",
    billedAnnually: "billed annually", 
    mostPopular: "Most Popular",
    month: "month"
  }
} = Astro.props;

---

<div class="grid gap-8 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1">
  {
    plans.map((plan) => (
      <div
        class={`relative bg-white rounded-2xl shadow-lg overflow-hidden transform hover:-translate-y-1 transition-all duration-300 ${plan.popular ? "ring-2 ring-primary" : "ring-1 ring-gray-200"}`}
      >
        {plan.popular && (
          <div class="absolute top-0 right-0 bg-primary text-white px-4 py-1 text-sm font-medium rounded-bl-lg">
            {texts.mostPopular}
          </div>
        )}
        <div class="p-8">
          <p class="text-2xl font-bold text-gray-900">{plan.name}</h3>
          <p class="mt-2 text-gray-500">{plan.description}</p>
          <div class="mt-6 flex items-baseline">
            <span class="text-4xl font-bold text-gray-900">
          {isNaN(Number(plan.price)) ? plan.price : new Intl.NumberFormat('en-US', { style: 'currency', currency: 'EUR', maximumFractionDigits: 0 }).format(Number(plan.price))}
        </span>
        {!isNaN(Number(plan.price)) && <span class="text-gray-500 ml-1">/ {texts.month}</span>}
        <div class="mt-1 group relative">
        {plan.price !== "Custom" && (
          <>
            <span class="ml-2 text-sm text-black-500 hover:text-gray-700 cursor-help text-xl"> * </span>
            <div class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 hidden group-hover:block bg-gray-900 text-white text-xs rounded py-1 px-2 whitespace-nowrap">
              {texts.billedAnnually}
            </div>
          </>
        )}
          </div>
          </div>

          <div class="mt-6">
            <a
              href="/contact"
              class={`block w-full text-center px-6 py-4 text-lg font-medium rounded-xl transition-colors duration-200 ${
                plan.popular
                  ? "text-white bg-primary hover:bg-primary/90"
                  : "text-primary bg-white border-2 border-primary/20 hover:bg-primary/5"
              }`}
            >
              {texts.requestQuote}
            </a>
          </div>
          
          <ul class="mt-8 space-y-4">
            {plan.features.map((feature) => (
              <li class="flex items-center">
                <svg
                  class="h-5 w-5 text-primary flex-shrink-0"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M5 13l4 4L19 7"
                  />
                </svg>
                <span class="ml-3 text-gray-600">{feature}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
    ))
  }
</div>
