---
interface Props {
  title: string;
  key: string;
  sections: {
    title: string;
    description: string;
    subsections?: {
      number: string;
      description: string;
    }[];
  }[];
}

const { title, sections, key }: Props = Astro.props;

---

<div id={key} class="bg-gradient-to-br from-primary/5 to-transparent rounded-xl p-8 mb-8 mt-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-2">{title}</h2>
    <div class="h-1 w-20 bg-gradient-to-r from-primary to-blue-600 rounded-full"></div>
  
  <div class="space-y-8">
    {sections?.map((section, index) => (
      <div >
        <h3 class="text-xl font-semibold text-gray-900 mb-4 mt-4">{section.title}</h3>
        {section.description && (
            <p class="text-gray-600 leading-relaxed">{section.description.trim()}</p>
        )}
        {section.subsections?.map((subsection, index) => (
          <div class="mb-4">
            <div class="font-semibold text-gray-900 mb-2">{subsection.number}</div>
            <p class="text-gray-600 leading-relaxed pl-4 border-l-2 border-primary/20">
              {subsection.description.trim()}
            </p>
          </div>
        ))}
      </div>
    ))}
  </div>
</div>