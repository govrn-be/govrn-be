---
import FormSuccess from "./FormSuccess.astro";

interface Props {
  reasons?: string[];
}

const {
  reasons = [
    "Evaluating Board Management Solutions",
    "Starting a New Board", 
    "Switching from Another Platform",
    "Improving Board Efficiency",
    "Other",
  ],
} = Astro.props;
---

<form id="trialForm" class="space-y-6">
  <div class="grid grid-cols-2 gap-6">
    <div>
      <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">
        First Name
      </label>
      <input
        type="text"
        id="firstName"
        name="firstName"
        class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary"
        required
      />
    </div>
    <div>
      <label for="lastName" class="block text-sm font-medium text-gray-700 mb-2">
        Last Name
      </label>
      <input
        type="text"
        id="lastName"
        name="lastName"
        class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary"
        required
      />
    </div>
  </div>

  <div>
    <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
      Work Email
    </label>
    <input
      type="email"
      id="email"
      name="email"
      class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary"
      required
    />
  </div>

  <div>
    <label for="company" class="block text-sm font-medium text-gray-700 mb-2">
      Company Name
    </label>
    <input
      type="text"
      id="company"
      name="company"
      class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary"
      required
    />
  </div>

  <div>
    <label for="reason" class="block text-sm font-medium text-gray-700 mb-2">
      Reason for Trial
    </label>
    <select
      id="reason"
      name="reason"
      class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary"
      required
    >
      <option value="">Select a reason</option>
      {reasons.map((reason) => (
        <option value={reason}>{reason}</option>
      ))}
    </select>
  </div>

  <button
    type="submit"
    id="submitButton"
    class="w-full px-6 py-4 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors duration-200 font-medium flex items-center justify-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed"
  >
    <span id="buttonText">Start Now</span>
    <svg id="buttonArrow" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M13 7l5 5m0 0l-5 5m5-5H6"
      ></path>
    </svg>
    <svg id="buttonLoader" class="animate-spin h-5 w-5 hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
    </svg>
  </button>

  <p class="text-sm text-gray-500 text-center">
    By signing up, you agree to our
    <a href="/terms" class="text-primary hover:text-primary/90">Terms of Service</a>
    and
    <a href="/privacy" class="text-primary hover:text-primary/90">Privacy Policy</a>.
  </p>
</form>

<div id="formSuccess" class="hidden">
  <FormSuccess
    title="Welcome to Govrn!"
    message="Your trial account is being set up. Check your email for login instructions."
  />
</div>

<script>
  const form = document.getElementById("trialForm") as HTMLFormElement;
  const success = document.getElementById("formSuccess");
  const buttonText = document.getElementById("buttonText");
  const buttonArrow = document.getElementById("buttonArrow");
  const buttonLoader = document.getElementById("buttonLoader");
  const submitButton = document.getElementById("submitButton") as HTMLButtonElement;

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Show loading state and disable button
    // if (buttonText) buttonText.textContent = "Processing...";
    buttonArrow?.classList.add("hidden");
    buttonLoader?.classList.remove("hidden");
    if (submitButton) submitButton.disabled = true;

    const formData = new FormData(form);

    const payload = {
      firstName: formData.get("firstName"),
      lastName: formData.get("lastName"),
      email: formData.get("email"),
      organizationName: formData.get("company"),
      reason: formData.get("reason"),
    };

    try {
      const response = await fetch("https://prod.api.ongovrn.com/public/trial", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      });

      if (!response.ok) {
        throw new Error("Failed to submit trial request");
      }

      // Show success message
      form.classList.add("hidden");
      success?.classList.remove("hidden");
    } catch (error) {
      console.error("Error submitting form:", error);
      alert("There was an issue submitting your trial request. Please try again later.");
      
      // Reset button state on error
      // if (buttonText) buttonText.textContent = "Start Now";
      buttonArrow?.classList.remove("hidden");
      buttonLoader?.classList.add("hidden");
      if (submitButton) submitButton.disabled = false;
    }
  });
</script>
