---
const tasks = [
  { title: "Board Meeting Minutes", status: "pending" },
  { title: "Annual Report Review", status: "signed" },
  { title: "Compliance Check", status: "in_progress" }
];

const signatures = [
  { name: "Emma Wilson", role: "Director" },
  { name: "James Chen", role: "Chairman" },
  { name: "Sarah Miller", role: "Secretary" }
];
---

<div class="relative w-full h-full flex items-center justify-center">
  <div class="w-full max-w-md space-y-8">
    <!-- Task Management -->
    <div class="bg-white rounded-xl p-4 shadow-lg border border-gray-100">
      <div class="flex items-center justify-between mb-4">
        <h3 class="font-semibold text-gray-900 text-sm">Tasks</h3>
        <span class="px-2 py-1 bg-primary/10 text-primary text-xs font-medium rounded-full">
          Active Tasks
        </span>
      </div>

      <div class="space-y-2">
        {tasks.map((task, index) => (
          <div 
            class="flex items-center justify-between p-3 bg-gray-50 rounded-lg animate-task-validation"
            style={`animation-delay: ${index * 2}s`}
          >
            <div class="flex items-center space-x-3">
              <div class="relative">
                <div class="w-5 h-5 rounded-full border-2 border-gray-300 flex items-center justify-center">
                  <svg class="w-3 h-3 text-green-500 opacity-0 check-mark" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M5 13l4 4L19 7" />
                  </svg>
                </div>
                <div class="absolute inset-0 rounded-full border-2 border-green-500 scale-0 opacity-0 success-ring"></div>
              </div>
              <div class="text-sm font-medium text-gray-900">{task.title}</div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- E-Signatures -->
    <div class="bg-white rounded-xl p-4 shadow-lg border border-gray-100">
      <div class="flex items-center justify-between mb-4">
        <h3 class="font-semibold text-gray-900 text-sm">Signatures</h3>
        <span class="px-2 py-1 bg-primary/10 text-primary text-xs font-medium rounded-full">
          Pending
        </span>
      </div>

      <div class="space-y-2">
        {signatures.map((sig, index) => (
          <div 
            class="flex items-center justify-between p-3 bg-gray-50 rounded-lg animate-signature-validation"
            style={`animation-delay: ${index * 2 + 1}s`}
          >
            <div class="flex items-center space-x-3">
              <div class="relative">
                <div class="w-5 h-5 bg-gray-100 rounded-full flex items-center justify-center">
                  <svg class="w-3 h-3 text-primary opacity-0 signature-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13" />
                  </svg>
                </div>
                <div class="absolute inset-0 rounded-full border-2 border-primary scale-0 opacity-0 signature-ring"></div>
              </div>
              <div>
                <div class="text-sm font-medium text-gray-900">{sig.name}</div>
                <div class="text-xs text-gray-500">{sig.role}</div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</div>

<style>
  @keyframes taskValidation {
    0%, 70% { transform: translateX(0); }
    5% { transform: translateX(-4px); }
    10% { transform: translateX(4px); }
    15% { transform: translateX(0); }
    20% { transform: translateX(-2px); }
    25% { transform: translateX(2px); }
    30% { transform: translateX(0); }
    35% {
      border-color: transparent;
      background-color: #f0fdf4;
    }
  }

  @keyframes checkMarkAppear {
    0%, 30% { opacity: 0; transform: scale(0); }
    35% { opacity: 1; transform: scale(1.2); }
    40% { transform: scale(1); }
    70% { opacity: 1; }
    75% { opacity: 0; }
  }

  @keyframes successRing {
    0%, 30% { transform: scale(0); opacity: 0; }
    35% { transform: scale(1.2); opacity: 1; }
    40% { transform: scale(1); opacity: 1; }
    70% { opacity: 1; }
    75% { opacity: 0; }
  }

  @keyframes signatureValidation {
    0%, 70% { transform: translateX(0); }
    5% { transform: translateX(-4px); }
    10% { transform: translateX(4px); }
    15% { transform: translateX(0); }
    20% { transform: translateX(-2px); }
    25% { transform: translateX(2px); }
    30% { transform: translateX(0); }
    35% {
      border-color: transparent;
      background-color: #eff6ff;
    }
  }

  @keyframes signatureIconAppear {
    0%, 30% { opacity: 0; transform: scale(0) rotate(-45deg); }
    35% { opacity: 1; transform: scale(1.2) rotate(0); }
    40% { transform: scale(1) rotate(0); }
    70% { opacity: 1; }
    75% { opacity: 0; }
  }

  @keyframes signatureRing {
    0%, 30% { transform: scale(0); opacity: 0; }
    35% { transform: scale(1.2); opacity: 1; }
    40% { transform: scale(1); opacity: 1; }
    70% { opacity: 1; }
    75% { opacity: 0; }
  }

  .animate-task-validation {
    animation: taskValidation 6s infinite;
  }

  .animate-task-validation .check-mark {
    animation: checkMarkAppear 6s infinite;
  }

  .animate-task-validation .success-ring {
    animation: successRing 6s infinite;
  }

  .animate-signature-validation {
    animation: signatureValidation 6s infinite;
  }

  .animate-signature-validation .signature-icon {
    animation: signatureIconAppear 6s infinite;
  }

  .animate-signature-validation .signature-ring {
    animation: signatureRing 6s infinite;
  }
</style>