---
interface Props {
  name: string;
  role: 'board-member' | 'board-secretary';
  challenges: Array<{
    icon: string;
    title: string;
    description: string;
  }>;
}

const { name, role, challenges } = Astro.props;

// Role & industry specific section titles
const sectionTitles = {
  'board-member': {
    'Financial Services': 'Financial Services Board Challenges',
    'Healthcare': 'Healthcare Governance Challenges',
    'Real Estate': 'Real Estate Board Oversight Challenges'
  },
  'board-secretary': {
    'Financial Services': 'Financial Services Administration Challenges',
    'Healthcare': 'Healthcare Documentation Challenges',
    'Real Estate': 'Real Estate Board Management Challenges'
  }
};

const getTitle = () => {
  if (sectionTitles[role]?.[name]) {
    return sectionTitles[role][name];
  }
  return `${name} Challenges We Solve`;
};
---

<section class="py-20 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center max-w-3xl mx-auto mb-16">
      <h2 class="text-3xl font-bold text-gray-900 mb-4">
        {getTitle()}
      </h2>
      <p class="text-xl text-gray-600">
        Address key challenges facing {name.toLowerCase()} {role === 'board-member' ? 'board members' : 'board secretaries'} with our comprehensive solution.
      </p>
    </div>

    <div class="grid md:grid-cols-3 gap-8">
      {challenges.map(challenge => (
        <div class="bg-white rounded-xl p-8 shadow-lg border border-gray-100 hover:shadow-xl transition-all duration-300">
          <div class="text-3xl mb-4">{challenge.icon}</div>
          <h3 class="text-xl font-bold text-gray-900 mb-4">{challenge.title}</h3>
          <p class="text-gray-600">{challenge.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>
