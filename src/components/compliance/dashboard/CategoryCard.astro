
---
interface Props {
  title: string;
  score: number;
  status: 'good' | 'warning' | 'alert';
  index: number;
}

const { title, score, status, index } = Astro.props;

const statusColors = {
  good: 'bg-green-100 text-green-800',
  warning: 'bg-yellow-100 text-yellow-800',
  alert: 'bg-red-100 text-red-800'
};
---

<div 
  class="bg-white rounded-xl p-4 shadow-lg border border-gray-100 animate-slide-in"
  style={`animation-delay: ${index * 200}ms`}
>
  <div class="flex items-center justify-between mb-2">
    <h3 class="font-medium text-gray-900">{title}</h3>
    <span class={`px-2 py-1 rounded-full text-sm ${statusColors[status]}`}>
      {score}%
    </span>
  </div>
  <div class="h-2 bg-gray-100 rounded-full overflow-hidden">
    <div 
      class="h-full bg-primary animate-score-fill" 
      style={`width: ${score}%; animation-delay: ${index * 200 + 500}ms`}
    ></div>
  </div>
</div>

<style>
  @keyframes slideIn {
    from { 
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes scoreFill {
    from { width: 0; }
    to { width: var(--score-width); }
  }

  .animate-slide-in {
    opacity: 0;
    animation: slideIn 0.5s ease-out forwards;
  }

  .animate-score-fill {
    --score-width: 0%;
    animation: scoreFill 1s ease-out forwards;
  }
</style>
